version: "3.9"

services:
  auth_db:
    restart: always
    image: postgres
    container_name: auth_db
    volumes:
      - "./auth/data/db:/var/lib/postgresql/data"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  auth:
    container_name: auth_service
    build:
      context: "./auth"
    command: "python manage.py runserver 0.0.0.0:8000"
    volumes:
      - "./auth:/code"
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - auth_db

  products_db:
    restart: always
    image: postgres
    container_name: products_db
    volumes:
      - "./products/data/db:/var/lib/postgresql/data"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  products:
    container_name: products_service
    build:
      context: "./products"
    command: "python manage.py runserver 0.0.0.0:8000"
    volumes:
      - "./products:/code"
    ports:
      - "8001:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - products_db
